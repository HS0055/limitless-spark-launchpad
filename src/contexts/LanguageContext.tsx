import { createContext, useContext, useState, useEffect, ReactNode } from 'react';
import { useAuth } from '@/components/auth/AuthProvider';

export type Language = 'en' | 'hy' | 'ru';

interface LanguageContextType {
  language: Language;
  setLanguage: (lang: Language) => void;
  t: (key: string) => string;
  isTranslating: boolean;
}

const LanguageContext = createContext<LanguageContextType | undefined>(undefined);

export const useLanguage = () => {
  const context = useContext(LanguageContext);
  if (!context) {
    throw new Error('useLanguage must be used within a LanguageProvider');
  }
  return context;
};

// Translation dictionaries
const translations = {
  en: {
    // Navigation
    'nav.home': 'Home',
    'nav.programs': 'Programs',
    'nav.business': 'Business',
    'nav.memeCoins': 'Meme Coins',
    'nav.visual': 'Visual',
    'nav.translator': 'Translator',
    'nav.community': 'Community',
    'nav.pricing': 'Pricing',
    'nav.settings': 'Settings',
    'nav.signOut': 'Sign Out',
    'nav.getStarted': 'Get Started',
    
    // Dashboard
    'dashboard.welcome': 'Welcome back, Thinker!',
    'dashboard.subtitle': 'Continue building your unique mind',
    'dashboard.dayStreak': 'Day Streak',
    'dashboard.exploreModels': 'Explore Models',
    'dashboard.mentalModels': 'Mental Models',
    'dashboard.learningHours': 'Learning Hours',
    'dashboard.streakDays': 'Streak Days',
    'dashboard.weeklyGoal': 'Weekly Goal',
    'dashboard.thisMonth': 'this month',
    'dashboard.currentStreak': 'current streak',
    'dashboard.almostThere': 'almost there!',
    'dashboard.available': 'available',
    
    // Leagues
    'leagues.title': 'Learning Leagues',
    'leagues.viewAll': 'View All Programs',
    'leagues.beginner': 'Beginner League',
    'leagues.advanced': 'Advanced League',
    'leagues.elite': 'Elite League',
    'leagues.foundation': 'Foundation Building',
    'leagues.strategic': 'Strategic Mastery',
    'leagues.innovation': 'Innovation & Leadership',
    'leagues.participants': 'participants',
    
    // Mental Models
    'models.yourModels': 'Your Mental Models',
    'models.browseAll': 'Browse All',
    'models.mastered': 'Mastered',
    'models.inProgress': 'In Progress',
    'models.continue': 'Continue',
    'models.review': 'Review',
    'models.progress': 'Progress',
    'models.lessons': 'lessons',
    
    // Achievements
    'achievements.nextGoal': 'Next Goal',
    'achievements.recent': 'Recent Achievements',
    'achievements.quickActions': 'Quick Actions',
    'achievements.browsePrograms': 'Browse Programs',
    'achievements.joinCommunity': 'Join Community',
    'achievements.setGoals': 'Set Goals',
    
    // Hero Section
    'hero.badge': 'üèÜ Business Fundamentals League',
    'hero.title': 'Master business skills with',
    'hero.company': 'TopOne Academy',
    'hero.subtitle': 'Join the Business Fundamentals League and gain confidence through',
    'hero.visualLearning': 'visual learning',
    'hero.description': 'Transform your business skills with bite-sized visual lessons designed to make complex concepts simple and actionable.',
    'hero.joinLeague': 'üöÄ Join Business League',
    'hero.watchPreview': 'Watch Preview',
    
    // Stats
    'stats.leagues': 'Learning Leagues',
    'stats.learners': 'Active Learners',
    'stats.rating': 'Average Rating',
    'stats.lessonLength': 'Lesson Length',
    
    // Benefits
    'benefits.visual': 'Visual Learning - No boring theory',
    'benefits.lessons': 'Minute Lessons - Perfect for busy schedules',
    'benefits.gamified': 'Gamified Experience - Unlock achievements',
    'benefits.tracking': 'Progress Tracking - See your growth',
    'benefits.community': 'Community Access - Learn with peers',
    'benefits.mobile': 'Mobile Optimized - Learn anywhere',
    
    // Common
    'common.loading': 'Loading...',
    'common.signIn': 'Sign In',
    'common.signUp': 'Sign Up',
    'common.models': 'Models',
    'common.of': 'of',
  },
  
  hy: {
    // Navigation - Improved and culturally appropriate
    'nav.home': '’Ä’°’µ÷Ä’•’∂’´÷Ñ',
    'nav.programs': '‘æ÷Ä’°’£÷Ä’•÷Ä',
    'nav.business': '‘≤’´’¶’∂’•’Ω',
    'nav.memeCoins': '’Ñ’•’¥ ’è’∏’Ø’•’∂’•÷Ä',
    'nav.visual': '’Ü’Ø’°÷Ä’°’¶’°÷Ä’§',
    'nav.translator': '‘π’°÷Ä’£’¥’°’∂’´’π',
    'nav.community': '’Ä’°’¥’°’µ’∂÷Ñ',
    'nav.pricing': '‘≥’∂’°’Ø’°÷Ä’£',
    'nav.settings': '‘ø’°÷Ä’£’°’æ’∏÷Ä’∏÷Ç’¥’∂’•÷Ä',
    'nav.signOut': '‘¥’∏÷Ç÷Ä’Ω ’£’°’¨',
    'nav.getStarted': '’ç’Ø’Ω’•’∂÷Ñ',
    'nav.aiTools': '‘±‘ª ‘≥’∏÷Ä’Æ’´÷Ñ’∂’•÷Ä',
    
    // Dashboard - More natural Armenian
    'dashboard.welcome': '‘≤’°÷Ä’´ ’æ’•÷Ä’°’§’°÷Ä’±, ’Ω’´÷Ä’•’¨’´ ’∏÷Ç’Ω’°’∂’∏’≤!',
    'dashboard.subtitle': '’á’°÷Ä’∏÷Ç’∂’°’Ø’´÷Ä ’¶’°÷Ä’£’°÷Å’∂’•’¨ ÷Ñ’∏ ’•’¶’°’Ø’´ ’¥’ø’°’Æ’•’¨’°’Ø’•÷Ä’∫’®',
    'dashboard.dayStreak': '’ï÷Ä’°’Ø’°’∂ ’∑’°÷Ä÷Ñ',
    'dashboard.exploreModels': '’à÷Ç’Ω’∏÷Ç’¥’∂’°’Ω’´÷Ä’•’¨ ’¥’∏’§’•’¨’∂’•÷Ä’®',
    'dashboard.mentalModels': '’Ñ’ø’°’æ’∏÷Ä ’¥’∏’§’•’¨’∂’•÷Ä',
    'dashboard.learningHours': '’à÷Ç’Ω’¥’°’∂ ’™’°’¥’•÷Ä',
    'dashboard.streakDays': '‘±’∂’®’∂’§’∞’°’ø ÷Ö÷Ä’•÷Ä',
    'dashboard.weeklyGoal': '’á’°’¢’°’©’°’Ø’°’∂ ’∂’∫’°’ø’°’Ø',
    'dashboard.thisMonth': '’°’µ’Ω ’°’¥’´’Ω',
    'dashboard.currentStreak': '’∂’•÷Ä’Ø’°’µ’´’Ω ’∑’°÷Ä÷Ñ',
    'dashboard.almostThere': '’£÷Ä’•’©’• ’∞’°’Ω’•’¨ ’•’∂÷Ñ!',
    'dashboard.available': '’¥’°’ø’π’•’¨’´',
    
    // Leagues - Professional and engaging
    'leagues.title': '’à÷Ç’Ω’∏÷Ç’¥’∂’°’Ø’°’∂ ‘º’´’£’°’∂’•÷Ä',
    'leagues.viewAll': '‘¥’´’ø’•’¨ ’¢’∏’¨’∏÷Ä ’Æ÷Ä’°’£÷Ä’•÷Ä’®',
    'leagues.beginner': '’ç’Ø’Ω’∂’°’Ø’∂’•÷Ä’´ ‘º’´’£’°',
    'leagues.advanced': '’ì’∏÷Ä’±’µ’°’¨’∂’•÷Ä’´ ‘º’´’£’°',
    'leagues.elite': '‘∑’¨’´’ø’° ‘º’´’£’°',
    'leagues.foundation': '’Ä’´’¥’∏÷Ç’∂÷Ñ’∂’•÷Ä’´ ’Ω’ø’•’≤’Æ’∏÷Ç’¥',
    'leagues.strategic': '’å’°’¶’¥’°’æ’°÷Ä’°’Ø’°’∂ ’æ’°÷Ä’∫’•’ø’∏÷Ç’©’µ’∏÷Ç’∂',
    'leagues.innovation': '’Ü’∏÷Ä’°÷Ä’°÷Ä’∏÷Ç’©’µ’∏÷Ç’∂ ÷á ’°’º’°’ª’∂’∏÷Ä’§’∏÷Ç’©’µ’∏÷Ç’∂',
    'leagues.participants': '’¥’°’Ω’∂’°’Ø’´÷Å’∂’•÷Ä',
    
    // Mental Models - Clear and motivating
    'models.yourModels': '’î’∏ ’¥’ø’°’æ’∏÷Ä ’¥’∏’§’•’¨’∂’•÷Ä’®',
    'models.browseAll': '’è’•’Ω’∂’•’¨ ’¢’∏’¨’∏÷Ä’®',
    'models.mastered': '’Ö’∏÷Ç÷Ä’°÷Å’æ’°’Æ',
    'models.inProgress': '‘∏’∂’©’°÷Å’°’Ø’°÷Ä’£’∏÷Ç’¥',
    'models.continue': '’á’°÷Ä’∏÷Ç’∂’°’Ø’•’¨',
    'models.review': '’é’•÷Ä’°’∂’°’µ’•’¨',
    'models.progress': '‘±’º’°’ª’®’∂’©’°÷Å',
    'models.lessons': '’§’°’Ω’®’∂’©’°÷Å’∂’•÷Ä',
    
    // Achievements - Encouraging tone
    'achievements.nextGoal': '’Ä’°’ª’∏÷Ä’§ ’∂’∫’°’ø’°’Ø’®',
    'achievements.recent': '’é’•÷Ä’ª’´’∂ ’±’•’º÷Ñ’¢’•÷Ä’∏÷Ç’¥’∂’•÷Ä’®',
    'achievements.quickActions': '‘±÷Ä’°’£ ’£’∏÷Ä’Æ’∏’≤’∏÷Ç’©’µ’∏÷Ç’∂’∂’•÷Ä',
    'achievements.browsePrograms': '‘æ’°’∂’∏’©’°’∂’°’¨ ’Æ÷Ä’°’£÷Ä’•÷Ä’´’∂',
    'achievements.joinCommunity': '’Ñ’´’°’∂’°’¨ ’∞’°’¥’°’µ’∂÷Ñ’´’∂',
    'achievements.setGoals': '’ç’°’∞’¥’°’∂’•’¨ ’∂’∫’°’ø’°’Ø’∂’•÷Ä',
    
    // Hero Section - Compelling and natural
    'hero.badge': 'üèÜ ‘≤’´’¶’∂’•’Ω ’∞’´’¥’∏÷Ç’∂÷Ñ’∂’•÷Ä’´ ’¨’´’£’°',
    'hero.title': '’è’´÷Ä’°’∫’•’ø’´÷Ä ’¢’´’¶’∂’•’Ω ’∞’¥’ø’∏÷Ç’©’µ’∏÷Ç’∂’∂’•÷Ä’´’∂',
    'hero.company': 'TopOne ‘±’Ø’°’§’•’¥’´’°’µ’´',
    'hero.subtitle': '’Ñ’´’°÷Å’´÷Ä ‘≤’´’¶’∂’•’Ω ’∞’´’¥’∏÷Ç’∂÷Ñ’∂’•÷Ä’´ ’¨’´’£’°’µ’´’∂ ÷á ’≥’∑’£÷Ä’ø’´÷Ä ÷Ñ’∏ ’£’´’ø’•’¨’´÷Ñ’∂’•÷Ä’®',
    'hero.visualLearning': '’∂’Ø’°÷Ä’°’¶’°÷Ä’§ ’∏÷Ç’Ω’¥’°’∂',
    'hero.description': '’ì’∏’≠’°’Ø’•÷Ä’∫’´÷Ä ÷Ñ’∏ ’¢’´’¶’∂’•’Ω ’£’´’ø’•’¨’´÷Ñ’∂’•÷Ä’® ’Ø’°÷Ä’≥ ÷á ’∫’°÷Ä’¶ ’∂’Ø’°÷Ä’°’¶’°÷Ä’§ ’§’°’Ω’•÷Ä’´ ’¥’´’ª’∏÷Å’∏’æ, ’∏÷Ä’∏’∂÷Ñ ’∂’°’≠’°’ø’•’Ω’æ’°’Æ ’•’∂ ’¢’°÷Ä’§ ’∞’°’Ω’Ø’°÷Å’∏÷Ç’©’µ’∏÷Ç’∂’∂’•÷Ä’® ’∫’°÷Ä’¶ ÷á ’Ø’´÷Ä’°’º’•’¨’´ ’§’°÷Ä’±’∂’•’¨’∏÷Ç ’∞’°’¥’°÷Ä÷â',
    'hero.joinLeague': 'üöÄ ’Ñ’´’°’∂’°’¨ ’¢’´’¶’∂’•’Ω ’¨’´’£’°’µ’´’∂',
    'hero.watchPreview': '‘¥’´’ø’•’¨ ’∂’°’≠’°’§’´’ø’∏÷Ç’¥’®',
    
    // Stats - Professional terminology
    'stats.leagues': '’à÷Ç’Ω’∏÷Ç’¥’∂’°’Ø’°’∂ ’¨’´’£’°’∂’•÷Ä',
    'stats.learners': '‘±’Ø’ø’´’æ ’∏÷Ç’Ω’°’∂’∏’≤’∂’•÷Ä',
    'stats.rating': '’Ñ’´’ª’´’∂ ’£’∂’°’∞’°’ø’°’Ø’°’∂',
    'stats.lessonLength': '‘¥’°’Ω’´ ’ø÷á’∏’≤’∏÷Ç’©’µ’∏÷Ç’∂’®',
    
    // Benefits - Clear value propositions
    'benefits.visual': '’Ü’Ø’°÷Ä’°’¶’°÷Ä’§ ’∏÷Ç’Ω’∏÷Ç’¥ - ’à’π ’±’°’∂’±÷Ä’°’¨’´ ’ø’•’Ω’∏÷Ç’©’µ’∏÷Ç’∂',
    'benefits.lessons': '‘ø’°÷Ä’≥ ’§’°’Ω’•÷Ä - ‘ø’°’ø’°÷Ä’µ’°’¨ ’ß ’¶’¢’°’≤’æ’°’Æ ÷Ö÷Ä’°’Ø’°÷Ä’£’´ ’∞’°’¥’°÷Ä',
    'benefits.gamified': '‘Ω’°’≤’°’µ’´’∂ ’¥’∏’ø’•÷Å’∏÷Ç’¥ - ‘≤’°÷Å’°’∞’°’µ’ø’´÷Ä ’±’•’º÷Ñ’¢’•÷Ä’∏÷Ç’¥’∂’•÷Ä',
    'benefits.tracking': '‘±’º’°’ª’®’∂’©’°÷Å’´ ’∞’•’ø÷á’∏÷Ç’¥ - ’è’•’Ω’´÷Ä ÷Ñ’∏ ’°’≥’®',
    'benefits.community': '’Ä’°’¥’°’µ’∂÷Ñ’°’µ’´’∂ ’¥’∏÷Ç’ø÷Ñ - ’ç’∏’æ’∏÷Ä’´÷Ä ’Ω’´÷Ä’•’¨’´’∂’•÷Ä’´ ’∞’•’ø',
    'benefits.mobile': '‘≤’ª’ª’°’µ’´’∂ ’∞’°÷Ä’¥’°÷Ä’•÷Å’æ’°’Æ - ’ç’∏’æ’∏÷Ä’´÷Ä ÷Å’°’∂’Ø’°÷Å’°’Æ ’æ’°’µ÷Ä’∏÷Ç’¥',
    
    // Common - Everyday expressions
    'common.loading': '‘≤’•’º’∂’°’æ’∏÷Ä’æ’∏÷Ç’¥ ’ß...',
    'common.signIn': '’Ñ’∏÷Ç’ø÷Ñ ’£’∏÷Ä’Æ’•’¨',
    'common.signUp': '‘≥÷Ä’°’∂÷Å’æ’•’¨',
    'common.models': '’Ñ’∏’§’•’¨’∂’•÷Ä',
    'common.of': '-’´÷Å',
  },
  
  ru: {
    // Navigation
    'nav.home': '–ì–ª–∞–≤–Ω–∞—è',
    'nav.programs': '–ü—Ä–æ–≥—Ä–∞–º–º—ã',
    'nav.business': '–ë–∏–∑–Ω–µ—Å',
    'nav.memeCoins': '–ú–µ–º-–º–æ–Ω–µ—Ç—ã',
    'nav.visual': '–í–∏–∑—É–∞–ª—å–Ω–æ–µ',
    'nav.translator': '–ü–µ—Ä–µ–≤–æ–¥—á–∏–∫',
    'nav.community': '–°–æ–æ–±—â–µ—Å—Ç–≤–æ',
    'nav.pricing': '–¶–µ–Ω—ã',
    'nav.settings': '–ù–∞—Å—Ç—Ä–æ–π–∫–∏',
    'nav.signOut': '–í—ã–π—Ç–∏',
    'nav.getStarted': '–ù–∞—á–∞—Ç—å',
    
    // Dashboard
    'dashboard.welcome': '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, –ú—ã—Å–ª–∏—Ç–µ–ª—å!',
    'dashboard.subtitle': '–ü—Ä–æ–¥–æ–ª–∂–∞–π —Ä–∞–∑–≤–∏–≤–∞—Ç—å —Å–≤–æ–π —É–Ω–∏–∫–∞–ª—å–Ω—ã–π —Ä–∞–∑—É–º',
    'dashboard.dayStreak': '–î–Ω–µ–≤–Ω–∞—è —Å–µ—Ä–∏—è',
    'dashboard.exploreModels': '–ò—Å—Å–ª–µ–¥–æ–≤–∞—Ç—å –º–æ–¥–µ–ª–∏',
    'dashboard.mentalModels': '–ú–µ–Ω—Ç–∞–ª—å–Ω—ã–µ –º–æ–¥–µ–ª–∏',
    'dashboard.learningHours': '–ß–∞—Å—ã –æ–±—É—á–µ–Ω–∏—è',
    'dashboard.streakDays': '–î–Ω–∏ –ø–æ–¥—Ä—è–¥',
    'dashboard.weeklyGoal': '–ù–µ–¥–µ–ª—å–Ω–∞—è —Ü–µ–ª—å',
    'dashboard.thisMonth': '–≤ —ç—Ç–æ–º –º–µ—Å—è—Ü–µ',
    'dashboard.currentStreak': '—Ç–µ–∫—É—â–∞—è —Å–µ—Ä–∏—è',
    'dashboard.almostThere': '–ø–æ—á—Ç–∏ –≥–æ—Ç–æ–≤–æ!',
    'dashboard.available': '–¥–æ—Å—Ç—É–ø–Ω–æ',
    
    // Leagues
    'leagues.title': '–õ–∏–≥–∏ –æ–±—É—á–µ–Ω–∏—è',
    'leagues.viewAll': '–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã',
    'leagues.beginner': '–õ–∏–≥–∞ –Ω–æ–≤–∏—á–∫–æ–≤',
    'leagues.advanced': '–ü—Ä–æ–¥–≤–∏–Ω—É—Ç–∞—è –ª–∏–≥–∞',
    'leagues.elite': '–≠–ª–∏—Ç–Ω–∞—è –ª–∏–≥–∞',
    'leagues.foundation': '–ü–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ –æ—Å–Ω–æ–≤',
    'leagues.strategic': '–°—Ç—Ä–∞—Ç–µ–≥–∏—á–µ—Å–∫–æ–µ –º–∞—Å—Ç–µ—Ä—Å—Ç–≤–æ',
    'leagues.innovation': '–ò–Ω–Ω–æ–≤–∞—Ü–∏–∏ –∏ –ª–∏–¥–µ—Ä—Å—Ç–≤–æ',
    'leagues.participants': '—É—á–∞—Å—Ç–Ω–∏–∫–æ–≤',
    
    // Mental Models
    'models.yourModels': '–í–∞—à–∏ –º–µ–Ω—Ç–∞–ª—å–Ω—ã–µ –º–æ–¥–µ–ª–∏',
    'models.browseAll': '–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ',
    'models.mastered': '–û—Å–≤–æ–µ–Ω–æ',
    'models.inProgress': '–í –ø—Ä–æ–≥—Ä–µ—Å—Å–µ',
    'models.continue': '–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å',
    'models.review': '–ü–æ–≤—Ç–æ—Ä–∏—Ç—å',
    'models.progress': '–ü—Ä–æ–≥—Ä–µ—Å—Å',
    'models.lessons': '—É—Ä–æ–∫–æ–≤',
    
    // Achievements
    'achievements.nextGoal': '–°–ª–µ–¥—É—é—â–∞—è —Ü–µ–ª—å',
    'achievements.recent': '–ù–µ–¥–∞–≤–Ω–∏–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è',
    'achievements.quickActions': '–ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è',
    'achievements.browsePrograms': '–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—ã',
    'achievements.joinCommunity': '–ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ —Å–æ–æ–±—â–µ—Å—Ç–≤—É',
    'achievements.setGoals': '–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ü–µ–ª–∏',
    
    // Hero Section
    'hero.badge': 'üèÜ –õ–∏–≥–∞ –æ—Å–Ω–æ–≤ –±–∏–∑–Ω–µ—Å–∞',
    'hero.title': '–û–≤–ª–∞–¥–µ–π –Ω–∞–≤—ã–∫–∞–º–∏ –±–∏–∑–Ω–µ—Å–∞ —Å',
    'hero.company': 'TopOne –ê–∫–∞–¥–µ–º–∏—è',
    'hero.subtitle': '–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Å—è –∫ –õ–∏–≥–µ –æ—Å–Ω–æ–≤ –±–∏–∑–Ω–µ—Å–∞ –∏ –æ–±—Ä–µ—Ç–∞–π —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å —á–µ—Ä–µ–∑',
    'hero.visualLearning': '–≤–∏–∑—É–∞–ª—å–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ',
    'hero.description': '–¢—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∏—Ä—É–π —Å–≤–æ–∏ –±–∏–∑–Ω–µ—Å-–Ω–∞–≤—ã–∫–∏ —Å –ø–æ–º–æ—â—å—é –∫–æ—Ä–æ—Ç–∫–∏—Ö –≤–∏–∑—É–∞–ª—å–Ω—ã—Ö —É—Ä–æ–∫–æ–≤, —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã —Å–¥–µ–ª–∞—Ç—å —Å–ª–æ–∂–Ω—ã–µ –∫–æ–Ω—Ü–µ–ø—Ü–∏–∏ –ø—Ä–æ—Å—Ç—ã–º–∏ –∏ –ø—Ä–∏–º–µ–Ω–∏–º—ã–º–∏.',
    'hero.joinLeague': 'üöÄ –ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –±–∏–∑–Ω–µ—Å-–ª–∏–≥–µ',
    'hero.watchPreview': '–°–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–µ–≤—å—é',
    
    // Stats
    'stats.leagues': '–õ–∏–≥–∏ –æ–±—É—á–µ–Ω–∏—è',
    'stats.learners': '–ê–∫—Ç–∏–≤–Ω—ã–µ —É—á–µ–Ω–∏–∫–∏',
    'stats.rating': '–°—Ä–µ–¥–Ω–∏–π —Ä–µ–π—Ç–∏–Ω–≥',
    'stats.lessonLength': '–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —É—Ä–æ–∫–∞',
    
    // Benefits
    'benefits.visual': '–í–∏–∑—É–∞–ª—å–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ - –ù–∏–∫–∞–∫–æ–π —Å–∫—É—á–Ω–æ–π —Ç–µ–æ—Ä–∏–∏',
    'benefits.lessons': '–ú–∏–Ω—É—Ç–Ω—ã–µ —É—Ä–æ–∫–∏ - –ò–¥–µ–∞–ª—å–Ω–æ –¥–ª—è –ø–ª–æ—Ç–Ω–æ–≥–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è',
    'benefits.gamified': '–ò–≥—Ä–æ–≤–æ–π –æ–ø—ã—Ç - –û—Ç–∫—Ä—ã–≤–∞–π—Ç–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è',
    'benefits.tracking': '–û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ - –í–∏–¥–∏—Ç–µ —Å–≤–æ–π —Ä–æ—Å—Ç',
    'benefits.community': '–î–æ—Å—Ç—É–ø –∫ —Å–æ–æ–±—â–µ—Å—Ç–≤—É - –£—á–∏—Ç–µ—Å—å —Å–æ —Å–≤–µ—Ä—Å—Ç–Ω–∏–∫–∞–º–∏',
    'benefits.mobile': '–ú–æ–±–∏–ª—å–Ω–∞—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è - –£—á–∏—Ç–µ—Å—å –≥–¥–µ —É–≥–æ–¥–Ω–æ',
    
    // Common
    'common.loading': '–ó–∞–≥—Ä—É–∑–∫–∞...',
    'common.signIn': '–í–æ–π—Ç–∏',
    'common.signUp': '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è',
    'common.models': '–ú–æ–¥–µ–ª–∏',
    'common.of': '–∏–∑',
  }
};

interface LanguageProviderProps {
  children: ReactNode;
}

export const LanguageProvider = ({ children }: LanguageProviderProps) => {
  const { user } = useAuth();
  const [language, setLanguageState] = useState<Language>('en');
  const [isTranslating, setIsTranslating] = useState(false);

  // Load language preference on mount
  useEffect(() => {
    const savedLanguage = localStorage.getItem('language') as Language;
    if (savedLanguage && ['en', 'hy', 'ru'].includes(savedLanguage)) {
      setLanguageState(savedLanguage);
    } else {
      // Try to detect browser language
      const browserLang = navigator.language.split('-')[0] as Language;
      if (['en', 'hy', 'ru'].includes(browserLang)) {
        setLanguageState(browserLang);
      }
    }
  }, []);

  const setLanguage = (lang: Language) => {
    setLanguageState(lang);
    localStorage.setItem('language', lang);
    
    // Trigger auto-translation
    if (lang !== 'en') {
      triggerAutoTranslation(lang);
    } else {
      restoreOriginalContent();
    }
    
    // If user is logged in, save preference to profile
    if (user) {
      console.log('TODO: Save language preference to user profile');
    }
  };

  const triggerAutoTranslation = async (targetLang: Language) => {
    setIsTranslating(true);
    // Auto-translation logic will be implemented here
    setTimeout(() => setIsTranslating(false), 2000); // Temporary
  };

  const restoreOriginalContent = () => {
    // Restore original content logic
    setIsTranslating(false);
  };

  const t = (key: string): string => {
    return translations[language][key as keyof typeof translations[typeof language]] || key;
  };

  return (
    <LanguageContext.Provider value={{ language, setLanguage, t, isTranslating }}>
      {children}
    </LanguageContext.Provider>
  );
};